### YamlMime:ManagedReference
items:
- uid: SearchAThing.ErrorInfo
  commentId: T:SearchAThing.ErrorInfo
  id: ErrorInfo
  parent: SearchAThing
  children:
  - SearchAThing.ErrorInfo.ExceptionType
  - SearchAThing.ErrorInfo.InnerException
  - SearchAThing.ErrorInfo.Message
  - SearchAThing.ErrorInfo.Stacktrace
  - SearchAThing.ErrorInfo.ToString
  - SearchAThing.ErrorInfo.ToString(System.Boolean)
  langs:
  - csharp
  - vb
  name: ErrorInfo
  nameWithType: ErrorInfo
  fullName: SearchAThing.ErrorInfo
  type: Class
  source:
    id: ErrorInfo
    path: Z:\netcore-util\netcore-util\Exception.cs
    startLine: 9
  assemblies:
  - netcore-util
  namespace: SearchAThing
  syntax:
    content: 'public class ErrorInfo : object'
    content.vb: >-
      Public Class ErrorInfo
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.SearchAThing.UtilExt.ToExpando
  - SearchAThing.ErrorInfo.SearchAThing.UtilExt.GetMemberNames``1(Expression{Func{SearchAThing.ErrorInfo,System.Object}})
  - SearchAThing.ErrorInfo.SearchAThing.UtilExt.GetMemberName``1(Expression{Func{SearchAThing.ErrorInfo,System.Object}})
  - SearchAThing.ErrorInfo.SearchAThing.UtilExt.Eval``2(Func{SearchAThing.ErrorInfo,{U}})
  - SearchAThing.ErrorInfo.SearchAThing.UtilExt.Assign``1(SearchAThing.ErrorInfo,Func{PropertyInfo,System.Boolean})
  - SearchAThing.ErrorInfo.SearchAThing.UtilExt.CopyFrom``1(SearchAThing.ErrorInfo,Func{PropertyInfo,System.Boolean})
  - SearchAThing.ErrorInfo.SearchAThing.UtilExt.CopyFromCustom``1(SearchAThing.ErrorInfo,SearchAThing.UtilExt.CopyFromCustomDelegate)
  - SearchAThing.ErrorInfo.SearchAThing.UtilExt.CopyFromExclude``1(SearchAThing.ErrorInfo,System.String[])
  - SearchAThing.ErrorInfo.SearchAThing.UtilExt.CopyFromInclude``1(SearchAThing.ErrorInfo,System.String[])
  - System.Object.SearchAThing.UtilExt.ToJson
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SearchAThing.ErrorInfo.Message
  commentId: P:SearchAThing.ErrorInfo.Message
  id: Message
  parent: SearchAThing.ErrorInfo
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ErrorInfo.Message
  fullName: SearchAThing.ErrorInfo.Message
  type: Property
  source:
    id: Message
    path: Z:\netcore-util\netcore-util\Exception.cs
    startLine: 12
  assemblies:
  - netcore-util
  namespace: SearchAThing
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: SearchAThing.ErrorInfo.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SearchAThing.ErrorInfo.ExceptionType
  commentId: P:SearchAThing.ErrorInfo.ExceptionType
  id: ExceptionType
  parent: SearchAThing.ErrorInfo
  langs:
  - csharp
  - vb
  name: ExceptionType
  nameWithType: ErrorInfo.ExceptionType
  fullName: SearchAThing.ErrorInfo.ExceptionType
  type: Property
  source:
    id: ExceptionType
    path: Z:\netcore-util\netcore-util\Exception.cs
    startLine: 13
  assemblies:
  - netcore-util
  namespace: SearchAThing
  syntax:
    content: public string ExceptionType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExceptionType As String
  overload: SearchAThing.ErrorInfo.ExceptionType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SearchAThing.ErrorInfo.Stacktrace
  commentId: P:SearchAThing.ErrorInfo.Stacktrace
  id: Stacktrace
  parent: SearchAThing.ErrorInfo
  langs:
  - csharp
  - vb
  name: Stacktrace
  nameWithType: ErrorInfo.Stacktrace
  fullName: SearchAThing.ErrorInfo.Stacktrace
  type: Property
  source:
    id: Stacktrace
    path: Z:\netcore-util\netcore-util\Exception.cs
    startLine: 14
  assemblies:
  - netcore-util
  namespace: SearchAThing
  syntax:
    content: public string Stacktrace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Stacktrace As String
  overload: SearchAThing.ErrorInfo.Stacktrace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SearchAThing.ErrorInfo.InnerException
  commentId: P:SearchAThing.ErrorInfo.InnerException
  id: InnerException
  parent: SearchAThing.ErrorInfo
  langs:
  - csharp
  - vb
  name: InnerException
  nameWithType: ErrorInfo.InnerException
  fullName: SearchAThing.ErrorInfo.InnerException
  type: Property
  source:
    id: InnerException
    path: Z:\netcore-util\netcore-util\Exception.cs
    startLine: 15
  assemblies:
  - netcore-util
  namespace: SearchAThing
  syntax:
    content: public string InnerException { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InnerException As String
  overload: SearchAThing.ErrorInfo.InnerException*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SearchAThing.ErrorInfo.ToString
  commentId: M:SearchAThing.ErrorInfo.ToString
  id: ToString
  parent: SearchAThing.ErrorInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ErrorInfo.ToString()
  fullName: SearchAThing.ErrorInfo.ToString()
  type: Method
  source:
    id: ToString
    path: Z:\netcore-util\netcore-util\Exception.cs
    startLine: 17
  assemblies:
  - netcore-util
  namespace: SearchAThing
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SearchAThing.ErrorInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SearchAThing.ErrorInfo.ToString(System.Boolean)
  commentId: M:SearchAThing.ErrorInfo.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: SearchAThing.ErrorInfo
  langs:
  - csharp
  - vb
  name: ToString(Boolean)
  nameWithType: ErrorInfo.ToString(Boolean)
  fullName: SearchAThing.ErrorInfo.ToString(System.Boolean)
  type: Method
  source:
    id: ToString
    path: Z:\netcore-util\netcore-util\Exception.cs
    startLine: 22
  assemblies:
  - netcore-util
  namespace: SearchAThing
  syntax:
    content: public string ToString(bool includeStackTrace)
    parameters:
    - id: includeStackTrace
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Function ToString(includeStackTrace As Boolean) As String
  overload: SearchAThing.ErrorInfo.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SearchAThing
  commentId: N:SearchAThing
  name: SearchAThing
  nameWithType: SearchAThing
  fullName: SearchAThing
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.SearchAThing.UtilExt.ToExpando
  commentId: M:SearchAThing.UtilExt.ToExpando(System.Object)
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.ToExpando(System.Object)
  name: ToExpando()
  nameWithType: UtilExt.ToExpando()
  fullName: SearchAThing.UtilExt.ToExpando()
  spec.csharp:
  - uid: SearchAThing.UtilExt.ToExpando
    name: ToExpando
    nameWithType: UtilExt.ToExpando
    fullName: SearchAThing.UtilExt.ToExpando
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.ToExpando
    name: ToExpando
    nameWithType: UtilExt.ToExpando
    fullName: SearchAThing.UtilExt.ToExpando
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.SearchAThing.UtilExt.GetMemberNames``1(Expression{Func{SearchAThing.ErrorInfo,System.Object}})
  commentId: M:SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
  name: GetMemberNames<ErrorInfo>(Expression<Func<ErrorInfo, Object>>)
  nameWithType: UtilExt.GetMemberNames<ErrorInfo>(Expression<Func<ErrorInfo, Object>>)
  fullName: SearchAThing.UtilExt.GetMemberNames<SearchAThing.ErrorInfo>(Expression<Func<SearchAThing.ErrorInfo, System.Object>>)
  nameWithType.vb: UtilExt.GetMemberNames(Of ErrorInfo)(Expression(Of Func(Of ErrorInfo, Object)))
  fullName.vb: SearchAThing.UtilExt.GetMemberNames(Of SearchAThing.ErrorInfo)(Expression(Of Func(Of SearchAThing.ErrorInfo, System.Object)))
  name.vb: GetMemberNames(Of ErrorInfo)(Expression(Of Func(Of ErrorInfo, Object)))
  spec.csharp:
  - uid: SearchAThing.UtilExt.GetMemberNames``1(Expression{Func{``0,System.Object}})
    name: GetMemberNames<ErrorInfo>
    nameWithType: UtilExt.GetMemberNames<ErrorInfo>
    fullName: SearchAThing.UtilExt.GetMemberNames<SearchAThing.ErrorInfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.GetMemberNames``1(Expression{Func{``0,System.Object}})
    name: GetMemberNames(Of ErrorInfo)
    nameWithType: UtilExt.GetMemberNames(Of ErrorInfo)
    fullName: SearchAThing.UtilExt.GetMemberNames(Of SearchAThing.ErrorInfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.SearchAThing.UtilExt.GetMemberName``1(Expression{Func{SearchAThing.ErrorInfo,System.Object}})
  commentId: M:SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
  name: GetMemberName<ErrorInfo>(Expression<Func<ErrorInfo, Object>>)
  nameWithType: UtilExt.GetMemberName<ErrorInfo>(Expression<Func<ErrorInfo, Object>>)
  fullName: SearchAThing.UtilExt.GetMemberName<SearchAThing.ErrorInfo>(Expression<Func<SearchAThing.ErrorInfo, System.Object>>)
  nameWithType.vb: UtilExt.GetMemberName(Of ErrorInfo)(Expression(Of Func(Of ErrorInfo, Object)))
  fullName.vb: SearchAThing.UtilExt.GetMemberName(Of SearchAThing.ErrorInfo)(Expression(Of Func(Of SearchAThing.ErrorInfo, System.Object)))
  name.vb: GetMemberName(Of ErrorInfo)(Expression(Of Func(Of ErrorInfo, Object)))
  spec.csharp:
  - uid: SearchAThing.UtilExt.GetMemberName``1(Expression{Func{``0,System.Object}})
    name: GetMemberName<ErrorInfo>
    nameWithType: UtilExt.GetMemberName<ErrorInfo>
    fullName: SearchAThing.UtilExt.GetMemberName<SearchAThing.ErrorInfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.GetMemberName``1(Expression{Func{``0,System.Object}})
    name: GetMemberName(Of ErrorInfo)
    nameWithType: UtilExt.GetMemberName(Of ErrorInfo)
    fullName: SearchAThing.UtilExt.GetMemberName(Of SearchAThing.ErrorInfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.SearchAThing.UtilExt.Eval``2(Func{SearchAThing.ErrorInfo,{U}})
  commentId: M:SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
  name: Eval<ErrorInfo, U>(Func<ErrorInfo, U>)
  nameWithType: UtilExt.Eval<ErrorInfo, U>(Func<ErrorInfo, U>)
  fullName: SearchAThing.UtilExt.Eval<SearchAThing.ErrorInfo, U>(Func<SearchAThing.ErrorInfo, U>)
  nameWithType.vb: UtilExt.Eval(Of ErrorInfo, U)(Func(Of ErrorInfo, U))
  fullName.vb: SearchAThing.UtilExt.Eval(Of SearchAThing.ErrorInfo, U)(Func(Of SearchAThing.ErrorInfo, U))
  name.vb: Eval(Of ErrorInfo, U)(Func(Of ErrorInfo, U))
  spec.csharp:
  - uid: SearchAThing.UtilExt.Eval``2(Func{``0,``1})
    name: Eval<ErrorInfo, U>
    nameWithType: UtilExt.Eval<ErrorInfo, U>
    fullName: SearchAThing.UtilExt.Eval<SearchAThing.ErrorInfo, U>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.Eval``2(Func{``0,``1})
    name: Eval(Of ErrorInfo, U)
    nameWithType: UtilExt.Eval(Of ErrorInfo, U)
    fullName: SearchAThing.UtilExt.Eval(Of SearchAThing.ErrorInfo, U)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.SearchAThing.UtilExt.Assign``1(SearchAThing.ErrorInfo,Func{PropertyInfo,System.Boolean})
  commentId: M:SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
  name: Assign<ErrorInfo>(ErrorInfo, Func<PropertyInfo, Boolean>)
  nameWithType: UtilExt.Assign<ErrorInfo>(ErrorInfo, Func<PropertyInfo, Boolean>)
  fullName: SearchAThing.UtilExt.Assign<SearchAThing.ErrorInfo>(SearchAThing.ErrorInfo, Func<PropertyInfo, System.Boolean>)
  nameWithType.vb: UtilExt.Assign(Of ErrorInfo)(ErrorInfo, Func(Of PropertyInfo, Boolean))
  fullName.vb: SearchAThing.UtilExt.Assign(Of SearchAThing.ErrorInfo)(SearchAThing.ErrorInfo, Func(Of PropertyInfo, System.Boolean))
  name.vb: Assign(Of ErrorInfo)(ErrorInfo, Func(Of PropertyInfo, Boolean))
  spec.csharp:
  - uid: SearchAThing.UtilExt.Assign``1(``0,Func{PropertyInfo,System.Boolean})
    name: Assign<ErrorInfo>
    nameWithType: UtilExt.Assign<ErrorInfo>
    fullName: SearchAThing.UtilExt.Assign<SearchAThing.ErrorInfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.Assign``1(``0,Func{PropertyInfo,System.Boolean})
    name: Assign(Of ErrorInfo)
    nameWithType: UtilExt.Assign(Of ErrorInfo)
    fullName: SearchAThing.UtilExt.Assign(Of SearchAThing.ErrorInfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.SearchAThing.UtilExt.CopyFrom``1(SearchAThing.ErrorInfo,Func{PropertyInfo,System.Boolean})
  commentId: M:SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
  name: CopyFrom<ErrorInfo>(ErrorInfo, Func<PropertyInfo, Boolean>)
  nameWithType: UtilExt.CopyFrom<ErrorInfo>(ErrorInfo, Func<PropertyInfo, Boolean>)
  fullName: SearchAThing.UtilExt.CopyFrom<SearchAThing.ErrorInfo>(SearchAThing.ErrorInfo, Func<PropertyInfo, System.Boolean>)
  nameWithType.vb: UtilExt.CopyFrom(Of ErrorInfo)(ErrorInfo, Func(Of PropertyInfo, Boolean))
  fullName.vb: SearchAThing.UtilExt.CopyFrom(Of SearchAThing.ErrorInfo)(SearchAThing.ErrorInfo, Func(Of PropertyInfo, System.Boolean))
  name.vb: CopyFrom(Of ErrorInfo)(ErrorInfo, Func(Of PropertyInfo, Boolean))
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFrom``1(``0,Func{PropertyInfo,System.Boolean})
    name: CopyFrom<ErrorInfo>
    nameWithType: UtilExt.CopyFrom<ErrorInfo>
    fullName: SearchAThing.UtilExt.CopyFrom<SearchAThing.ErrorInfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFrom``1(``0,Func{PropertyInfo,System.Boolean})
    name: CopyFrom(Of ErrorInfo)
    nameWithType: UtilExt.CopyFrom(Of ErrorInfo)
    fullName: SearchAThing.UtilExt.CopyFrom(Of SearchAThing.ErrorInfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.SearchAThing.UtilExt.CopyFromCustom``1(SearchAThing.ErrorInfo,SearchAThing.UtilExt.CopyFromCustomDelegate)
  commentId: M:SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
  name: CopyFromCustom<ErrorInfo>(ErrorInfo, UtilExt.CopyFromCustomDelegate)
  nameWithType: UtilExt.CopyFromCustom<ErrorInfo>(ErrorInfo, UtilExt.CopyFromCustomDelegate)
  fullName: SearchAThing.UtilExt.CopyFromCustom<SearchAThing.ErrorInfo>(SearchAThing.ErrorInfo, SearchAThing.UtilExt.CopyFromCustomDelegate)
  nameWithType.vb: UtilExt.CopyFromCustom(Of ErrorInfo)(ErrorInfo, UtilExt.CopyFromCustomDelegate)
  fullName.vb: SearchAThing.UtilExt.CopyFromCustom(Of SearchAThing.ErrorInfo)(SearchAThing.ErrorInfo, SearchAThing.UtilExt.CopyFromCustomDelegate)
  name.vb: CopyFromCustom(Of ErrorInfo)(ErrorInfo, UtilExt.CopyFromCustomDelegate)
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
    name: CopyFromCustom<ErrorInfo>
    nameWithType: UtilExt.CopyFromCustom<ErrorInfo>
    fullName: SearchAThing.UtilExt.CopyFromCustom<SearchAThing.ErrorInfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.UtilExt.CopyFromCustomDelegate
    name: UtilExt.CopyFromCustomDelegate
    nameWithType: UtilExt.CopyFromCustomDelegate
    fullName: SearchAThing.UtilExt.CopyFromCustomDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
    name: CopyFromCustom(Of ErrorInfo)
    nameWithType: UtilExt.CopyFromCustom(Of ErrorInfo)
    fullName: SearchAThing.UtilExt.CopyFromCustom(Of SearchAThing.ErrorInfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.UtilExt.CopyFromCustomDelegate
    name: UtilExt.CopyFromCustomDelegate
    nameWithType: UtilExt.CopyFromCustomDelegate
    fullName: SearchAThing.UtilExt.CopyFromCustomDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.SearchAThing.UtilExt.CopyFromExclude``1(SearchAThing.ErrorInfo,System.String[])
  commentId: M:SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
  name: CopyFromExclude<ErrorInfo>(ErrorInfo, String[])
  nameWithType: UtilExt.CopyFromExclude<ErrorInfo>(ErrorInfo, String[])
  fullName: SearchAThing.UtilExt.CopyFromExclude<SearchAThing.ErrorInfo>(SearchAThing.ErrorInfo, System.String[])
  nameWithType.vb: UtilExt.CopyFromExclude(Of ErrorInfo)(ErrorInfo, String())
  fullName.vb: SearchAThing.UtilExt.CopyFromExclude(Of SearchAThing.ErrorInfo)(SearchAThing.ErrorInfo, System.String())
  name.vb: CopyFromExclude(Of ErrorInfo)(ErrorInfo, String())
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,System.String[])
    name: CopyFromExclude<ErrorInfo>
    nameWithType: UtilExt.CopyFromExclude<ErrorInfo>
    fullName: SearchAThing.UtilExt.CopyFromExclude<SearchAThing.ErrorInfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,System.String[])
    name: CopyFromExclude(Of ErrorInfo)
    nameWithType: UtilExt.CopyFromExclude(Of ErrorInfo)
    fullName: SearchAThing.UtilExt.CopyFromExclude(Of SearchAThing.ErrorInfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.SearchAThing.UtilExt.CopyFromInclude``1(SearchAThing.ErrorInfo,System.String[])
  commentId: M:SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
  name: CopyFromInclude<ErrorInfo>(ErrorInfo, String[])
  nameWithType: UtilExt.CopyFromInclude<ErrorInfo>(ErrorInfo, String[])
  fullName: SearchAThing.UtilExt.CopyFromInclude<SearchAThing.ErrorInfo>(SearchAThing.ErrorInfo, System.String[])
  nameWithType.vb: UtilExt.CopyFromInclude(Of ErrorInfo)(ErrorInfo, String())
  fullName.vb: SearchAThing.UtilExt.CopyFromInclude(Of SearchAThing.ErrorInfo)(SearchAThing.ErrorInfo, System.String())
  name.vb: CopyFromInclude(Of ErrorInfo)(ErrorInfo, String())
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,System.String[])
    name: CopyFromInclude<ErrorInfo>
    nameWithType: UtilExt.CopyFromInclude<ErrorInfo>
    fullName: SearchAThing.UtilExt.CopyFromInclude<SearchAThing.ErrorInfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,System.String[])
    name: CopyFromInclude(Of ErrorInfo)
    nameWithType: UtilExt.CopyFromInclude(Of ErrorInfo)
    fullName: SearchAThing.UtilExt.CopyFromInclude(Of SearchAThing.ErrorInfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.ErrorInfo
    name: ErrorInfo
    nameWithType: ErrorInfo
    fullName: SearchAThing.ErrorInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.SearchAThing.UtilExt.ToJson
  commentId: M:SearchAThing.UtilExt.ToJson(System.Object)
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.ToJson(System.Object)
  name: ToJson()
  nameWithType: UtilExt.ToJson()
  fullName: SearchAThing.UtilExt.ToJson()
  spec.csharp:
  - uid: SearchAThing.UtilExt.ToJson
    name: ToJson
    nameWithType: UtilExt.ToJson
    fullName: SearchAThing.UtilExt.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.ToJson
    name: ToJson
    nameWithType: UtilExt.ToJson
    fullName: SearchAThing.UtilExt.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.ToExpando(System.Object)
  commentId: M:SearchAThing.UtilExt.ToExpando(System.Object)
  isExternal: true
  name: ToExpando(Object)
  nameWithType: UtilExt.ToExpando(Object)
  fullName: SearchAThing.UtilExt.ToExpando(System.Object)
  spec.csharp:
  - uid: SearchAThing.UtilExt.ToExpando(System.Object)
    name: ToExpando
    nameWithType: UtilExt.ToExpando
    fullName: SearchAThing.UtilExt.ToExpando
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.ToExpando(System.Object)
    name: ToExpando
    nameWithType: UtilExt.ToExpando
    fullName: SearchAThing.UtilExt.ToExpando
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt
  commentId: T:SearchAThing.UtilExt
  parent: SearchAThing
  name: UtilExt
  nameWithType: UtilExt
  fullName: SearchAThing.UtilExt
- uid: SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
  commentId: M:SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
  isExternal: true
  name: GetMemberNames<T>(T, Expression<Func<T, Object>>)
  nameWithType: UtilExt.GetMemberNames<T>(T, Expression<Func<T, Object>>)
  fullName: SearchAThing.UtilExt.GetMemberNames<T>(T, Expression<Func<T, System.Object>>)
  nameWithType.vb: UtilExt.GetMemberNames(Of T)(T, Expression(Of Func(Of T, Object)))
  fullName.vb: SearchAThing.UtilExt.GetMemberNames(Of T)(T, Expression(Of Func(Of T, System.Object)))
  name.vb: GetMemberNames(Of T)(T, Expression(Of Func(Of T, Object)))
  spec.csharp:
  - uid: SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
    name: GetMemberNames<T>
    nameWithType: UtilExt.GetMemberNames<T>
    fullName: SearchAThing.UtilExt.GetMemberNames<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
    name: GetMemberNames(Of T)
    nameWithType: UtilExt.GetMemberNames(Of T)
    fullName: SearchAThing.UtilExt.GetMemberNames(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
  commentId: M:SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
  isExternal: true
  name: GetMemberName<T>(T, Expression<Func<T, Object>>)
  nameWithType: UtilExt.GetMemberName<T>(T, Expression<Func<T, Object>>)
  fullName: SearchAThing.UtilExt.GetMemberName<T>(T, Expression<Func<T, System.Object>>)
  nameWithType.vb: UtilExt.GetMemberName(Of T)(T, Expression(Of Func(Of T, Object)))
  fullName.vb: SearchAThing.UtilExt.GetMemberName(Of T)(T, Expression(Of Func(Of T, System.Object)))
  name.vb: GetMemberName(Of T)(T, Expression(Of Func(Of T, Object)))
  spec.csharp:
  - uid: SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
    name: GetMemberName<T>
    nameWithType: UtilExt.GetMemberName<T>
    fullName: SearchAThing.UtilExt.GetMemberName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
    name: GetMemberName(Of T)
    nameWithType: UtilExt.GetMemberName(Of T)
    fullName: SearchAThing.UtilExt.GetMemberName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
  commentId: M:SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
  isExternal: true
  name: Eval<T, U>(T, Func<T, U>)
  nameWithType: UtilExt.Eval<T, U>(T, Func<T, U>)
  fullName: SearchAThing.UtilExt.Eval<T, U>(T, Func<T, U>)
  nameWithType.vb: UtilExt.Eval(Of T, U)(T, Func(Of T, U))
  fullName.vb: SearchAThing.UtilExt.Eval(Of T, U)(T, Func(Of T, U))
  name.vb: Eval(Of T, U)(T, Func(Of T, U))
  spec.csharp:
  - uid: SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
    name: Eval<T, U>
    nameWithType: UtilExt.Eval<T, U>
    fullName: SearchAThing.UtilExt.Eval<T, U>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
    name: Eval(Of T, U)
    nameWithType: UtilExt.Eval(Of T, U)
    fullName: SearchAThing.UtilExt.Eval(Of T, U)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
  commentId: M:SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
  isExternal: true
  name: Assign<T>(T, T, Func<PropertyInfo, Boolean>)
  nameWithType: UtilExt.Assign<T>(T, T, Func<PropertyInfo, Boolean>)
  fullName: SearchAThing.UtilExt.Assign<T>(T, T, Func<PropertyInfo, System.Boolean>)
  nameWithType.vb: UtilExt.Assign(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  fullName.vb: SearchAThing.UtilExt.Assign(Of T)(T, T, Func(Of PropertyInfo, System.Boolean))
  name.vb: Assign(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  spec.csharp:
  - uid: SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
    name: Assign<T>
    nameWithType: UtilExt.Assign<T>
    fullName: SearchAThing.UtilExt.Assign<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
    name: Assign(Of T)
    nameWithType: UtilExt.Assign(Of T)
    fullName: SearchAThing.UtilExt.Assign(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
  commentId: M:SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
  isExternal: true
  name: CopyFrom<T>(T, T, Func<PropertyInfo, Boolean>)
  nameWithType: UtilExt.CopyFrom<T>(T, T, Func<PropertyInfo, Boolean>)
  fullName: SearchAThing.UtilExt.CopyFrom<T>(T, T, Func<PropertyInfo, System.Boolean>)
  nameWithType.vb: UtilExt.CopyFrom(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  fullName.vb: SearchAThing.UtilExt.CopyFrom(Of T)(T, T, Func(Of PropertyInfo, System.Boolean))
  name.vb: CopyFrom(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
    name: CopyFrom<T>
    nameWithType: UtilExt.CopyFrom<T>
    fullName: SearchAThing.UtilExt.CopyFrom<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
    name: CopyFrom(Of T)
    nameWithType: UtilExt.CopyFrom(Of T)
    fullName: SearchAThing.UtilExt.CopyFrom(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
  commentId: M:SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
  name: CopyFromCustom<T>(T, T, UtilExt.CopyFromCustomDelegate)
  nameWithType: UtilExt.CopyFromCustom<T>(T, T, UtilExt.CopyFromCustomDelegate)
  fullName: SearchAThing.UtilExt.CopyFromCustom<T>(T, T, SearchAThing.UtilExt.CopyFromCustomDelegate)
  nameWithType.vb: UtilExt.CopyFromCustom(Of T)(T, T, UtilExt.CopyFromCustomDelegate)
  fullName.vb: SearchAThing.UtilExt.CopyFromCustom(Of T)(T, T, SearchAThing.UtilExt.CopyFromCustomDelegate)
  name.vb: CopyFromCustom(Of T)(T, T, UtilExt.CopyFromCustomDelegate)
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
    name: CopyFromCustom<T>
    nameWithType: UtilExt.CopyFromCustom<T>
    fullName: SearchAThing.UtilExt.CopyFromCustom<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.UtilExt.CopyFromCustomDelegate
    name: UtilExt.CopyFromCustomDelegate
    nameWithType: UtilExt.CopyFromCustomDelegate
    fullName: SearchAThing.UtilExt.CopyFromCustomDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
    name: CopyFromCustom(Of T)
    nameWithType: UtilExt.CopyFromCustom(Of T)
    fullName: SearchAThing.UtilExt.CopyFromCustom(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.UtilExt.CopyFromCustomDelegate
    name: UtilExt.CopyFromCustomDelegate
    nameWithType: UtilExt.CopyFromCustomDelegate
    fullName: SearchAThing.UtilExt.CopyFromCustomDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
  commentId: M:SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
  isExternal: true
  name: CopyFromExclude<T>(T, T, String[])
  nameWithType: UtilExt.CopyFromExclude<T>(T, T, String[])
  fullName: SearchAThing.UtilExt.CopyFromExclude<T>(T, T, System.String[])
  nameWithType.vb: UtilExt.CopyFromExclude(Of T)(T, T, String())
  fullName.vb: SearchAThing.UtilExt.CopyFromExclude(Of T)(T, T, System.String())
  name.vb: CopyFromExclude(Of T)(T, T, String())
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
    name: CopyFromExclude<T>
    nameWithType: UtilExt.CopyFromExclude<T>
    fullName: SearchAThing.UtilExt.CopyFromExclude<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
    name: CopyFromExclude(Of T)
    nameWithType: UtilExt.CopyFromExclude(Of T)
    fullName: SearchAThing.UtilExt.CopyFromExclude(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
  commentId: M:SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
  isExternal: true
  name: CopyFromInclude<T>(T, T, String[])
  nameWithType: UtilExt.CopyFromInclude<T>(T, T, String[])
  fullName: SearchAThing.UtilExt.CopyFromInclude<T>(T, T, System.String[])
  nameWithType.vb: UtilExt.CopyFromInclude(Of T)(T, T, String())
  fullName.vb: SearchAThing.UtilExt.CopyFromInclude(Of T)(T, T, System.String())
  name.vb: CopyFromInclude(Of T)(T, T, String())
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
    name: CopyFromInclude<T>
    nameWithType: UtilExt.CopyFromInclude<T>
    fullName: SearchAThing.UtilExt.CopyFromInclude<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
    name: CopyFromInclude(Of T)
    nameWithType: UtilExt.CopyFromInclude(Of T)
    fullName: SearchAThing.UtilExt.CopyFromInclude(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.ToJson(System.Object)
  commentId: M:SearchAThing.UtilExt.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: UtilExt.ToJson(Object)
  fullName: SearchAThing.UtilExt.ToJson(System.Object)
  spec.csharp:
  - uid: SearchAThing.UtilExt.ToJson(System.Object)
    name: ToJson
    nameWithType: UtilExt.ToJson
    fullName: SearchAThing.UtilExt.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.ToJson(System.Object)
    name: ToJson
    nameWithType: UtilExt.ToJson
    fullName: SearchAThing.UtilExt.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.ErrorInfo.Message*
  commentId: Overload:SearchAThing.ErrorInfo.Message
  name: Message
  nameWithType: ErrorInfo.Message
  fullName: SearchAThing.ErrorInfo.Message
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SearchAThing.ErrorInfo.ExceptionType*
  commentId: Overload:SearchAThing.ErrorInfo.ExceptionType
  name: ExceptionType
  nameWithType: ErrorInfo.ExceptionType
  fullName: SearchAThing.ErrorInfo.ExceptionType
- uid: SearchAThing.ErrorInfo.Stacktrace*
  commentId: Overload:SearchAThing.ErrorInfo.Stacktrace
  name: Stacktrace
  nameWithType: ErrorInfo.Stacktrace
  fullName: SearchAThing.ErrorInfo.Stacktrace
- uid: SearchAThing.ErrorInfo.InnerException*
  commentId: Overload:SearchAThing.ErrorInfo.InnerException
  name: InnerException
  nameWithType: ErrorInfo.InnerException
  fullName: SearchAThing.ErrorInfo.InnerException
- uid: SearchAThing.ErrorInfo.ToString*
  commentId: Overload:SearchAThing.ErrorInfo.ToString
  name: ToString
  nameWithType: ErrorInfo.ToString
  fullName: SearchAThing.ErrorInfo.ToString
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
