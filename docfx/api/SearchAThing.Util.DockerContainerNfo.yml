### YamlMime:ManagedReference
items:
- uid: SearchAThing.Util.DockerContainerNfo
  commentId: T:SearchAThing.Util.DockerContainerNfo
  id: DockerContainerNfo
  parent: SearchAThing.Util
  children:
  - SearchAThing.Util.DockerContainerNfo.#ctor(System.String,System.String)
  - SearchAThing.Util.DockerContainerNfo.IPAddress
  - SearchAThing.Util.DockerContainerNfo.Name
  - SearchAThing.Util.DockerContainerNfo.ToString
  langs:
  - csharp
  - vb
  name: DockerContainerNfo
  nameWithType: DockerContainerNfo
  fullName: SearchAThing.Util.DockerContainerNfo
  type: Class
  source:
    id: DockerContainerNfo
    path: Z:\netcore-util\netcore-util\Docker.cs
    startLine: 49
  assemblies:
  - netcore-util
  namespace: SearchAThing.Util
  summary: "\ndocker container info\n"
  example: []
  syntax:
    content: 'public class DockerContainerNfo : object'
    content.vb: >-
      Public Class DockerContainerNfo
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.SearchAThing.UtilExt.ToExpando
  - SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.GetMemberNames``1(Expression{Func{SearchAThing.Util.DockerContainerNfo,System.Object}})
  - SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.GetMemberName``1(Expression{Func{SearchAThing.Util.DockerContainerNfo,System.Object}})
  - SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.Eval``2(Func{SearchAThing.Util.DockerContainerNfo,{U}})
  - SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.Assign``1(SearchAThing.Util.DockerContainerNfo,Func{PropertyInfo,System.Boolean})
  - SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.CopyFrom``1(SearchAThing.Util.DockerContainerNfo,Func{PropertyInfo,System.Boolean})
  - SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.CopyFromCustom``1(SearchAThing.Util.DockerContainerNfo,SearchAThing.UtilExt.CopyFromCustomDelegate)
  - SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.CopyFromExclude``1(SearchAThing.Util.DockerContainerNfo,System.String[])
  - SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.CopyFromInclude``1(SearchAThing.Util.DockerContainerNfo,System.String[])
  - System.Object.SearchAThing.UtilExt.ToJson
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SearchAThing.Util.DockerContainerNfo.Name
  commentId: P:SearchAThing.Util.DockerContainerNfo.Name
  id: Name
  parent: SearchAThing.Util.DockerContainerNfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DockerContainerNfo.Name
  fullName: SearchAThing.Util.DockerContainerNfo.Name
  type: Property
  source:
    id: Name
    path: Z:\netcore-util\netcore-util\Docker.cs
    startLine: 55
  assemblies:
  - netcore-util
  namespace: SearchAThing.Util
  summary: "\ncontainer name\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: SearchAThing.Util.DockerContainerNfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SearchAThing.Util.DockerContainerNfo.IPAddress
  commentId: P:SearchAThing.Util.DockerContainerNfo.IPAddress
  id: IPAddress
  parent: SearchAThing.Util.DockerContainerNfo
  langs:
  - csharp
  - vb
  name: IPAddress
  nameWithType: DockerContainerNfo.IPAddress
  fullName: SearchAThing.Util.DockerContainerNfo.IPAddress
  type: Property
  source:
    id: IPAddress
    path: Z:\netcore-util\netcore-util\Docker.cs
    startLine: 60
  assemblies:
  - netcore-util
  namespace: SearchAThing.Util
  summary: "\ncontainer ip address\n"
  example: []
  syntax:
    content: public string IPAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property IPAddress As String
  overload: SearchAThing.Util.DockerContainerNfo.IPAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SearchAThing.Util.DockerContainerNfo.#ctor(System.String,System.String)
  commentId: M:SearchAThing.Util.DockerContainerNfo.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: SearchAThing.Util.DockerContainerNfo
  langs:
  - csharp
  - vb
  name: DockerContainerNfo(String, String)
  nameWithType: DockerContainerNfo.DockerContainerNfo(String, String)
  fullName: SearchAThing.Util.DockerContainerNfo.DockerContainerNfo(System.String, System.String)
  type: Constructor
  source:
    id: .ctor
    path: Z:\netcore-util\netcore-util\Docker.cs
    startLine: 65
  assemblies:
  - netcore-util
  namespace: SearchAThing.Util
  summary: "\nconstruct container info obj\n"
  example: []
  syntax:
    content: public DockerContainerNfo(string name, string ipaddress)
    parameters:
    - id: name
      type: System.String
    - id: ipaddress
      type: System.String
    content.vb: Public Sub New(name As String, ipaddress As String)
  overload: SearchAThing.Util.DockerContainerNfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Util.DockerContainerNfo.ToString
  commentId: M:SearchAThing.Util.DockerContainerNfo.ToString
  id: ToString
  parent: SearchAThing.Util.DockerContainerNfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DockerContainerNfo.ToString()
  fullName: SearchAThing.Util.DockerContainerNfo.ToString()
  type: Method
  source:
    id: ToString
    path: Z:\netcore-util\netcore-util\Docker.cs
    startLine: 74
  assemblies:
  - netcore-util
  namespace: SearchAThing.Util
  summary: "\nstringify container obj\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SearchAThing.Util.DockerContainerNfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SearchAThing.Util
  commentId: N:SearchAThing.Util
  name: SearchAThing.Util
  nameWithType: SearchAThing.Util
  fullName: SearchAThing.Util
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.SearchAThing.UtilExt.ToExpando
  commentId: M:SearchAThing.UtilExt.ToExpando(System.Object)
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.ToExpando(System.Object)
  name: ToExpando()
  nameWithType: UtilExt.ToExpando()
  fullName: SearchAThing.UtilExt.ToExpando()
  spec.csharp:
  - uid: SearchAThing.UtilExt.ToExpando
    name: ToExpando
    nameWithType: UtilExt.ToExpando
    fullName: SearchAThing.UtilExt.ToExpando
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.ToExpando
    name: ToExpando
    nameWithType: UtilExt.ToExpando
    fullName: SearchAThing.UtilExt.ToExpando
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.GetMemberNames``1(Expression{Func{SearchAThing.Util.DockerContainerNfo,System.Object}})
  commentId: M:SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
  name: GetMemberNames<DockerContainerNfo>(Expression<Func<DockerContainerNfo, Object>>)
  nameWithType: UtilExt.GetMemberNames<DockerContainerNfo>(Expression<Func<DockerContainerNfo, Object>>)
  fullName: SearchAThing.UtilExt.GetMemberNames<SearchAThing.Util.DockerContainerNfo>(Expression<Func<SearchAThing.Util.DockerContainerNfo, System.Object>>)
  nameWithType.vb: UtilExt.GetMemberNames(Of DockerContainerNfo)(Expression(Of Func(Of DockerContainerNfo, Object)))
  fullName.vb: SearchAThing.UtilExt.GetMemberNames(Of SearchAThing.Util.DockerContainerNfo)(Expression(Of Func(Of SearchAThing.Util.DockerContainerNfo, System.Object)))
  name.vb: GetMemberNames(Of DockerContainerNfo)(Expression(Of Func(Of DockerContainerNfo, Object)))
  spec.csharp:
  - uid: SearchAThing.UtilExt.GetMemberNames``1(Expression{Func{``0,System.Object}})
    name: GetMemberNames<DockerContainerNfo>
    nameWithType: UtilExt.GetMemberNames<DockerContainerNfo>
    fullName: SearchAThing.UtilExt.GetMemberNames<SearchAThing.Util.DockerContainerNfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.GetMemberNames``1(Expression{Func{``0,System.Object}})
    name: GetMemberNames(Of DockerContainerNfo)
    nameWithType: UtilExt.GetMemberNames(Of DockerContainerNfo)
    fullName: SearchAThing.UtilExt.GetMemberNames(Of SearchAThing.Util.DockerContainerNfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.GetMemberName``1(Expression{Func{SearchAThing.Util.DockerContainerNfo,System.Object}})
  commentId: M:SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
  name: GetMemberName<DockerContainerNfo>(Expression<Func<DockerContainerNfo, Object>>)
  nameWithType: UtilExt.GetMemberName<DockerContainerNfo>(Expression<Func<DockerContainerNfo, Object>>)
  fullName: SearchAThing.UtilExt.GetMemberName<SearchAThing.Util.DockerContainerNfo>(Expression<Func<SearchAThing.Util.DockerContainerNfo, System.Object>>)
  nameWithType.vb: UtilExt.GetMemberName(Of DockerContainerNfo)(Expression(Of Func(Of DockerContainerNfo, Object)))
  fullName.vb: SearchAThing.UtilExt.GetMemberName(Of SearchAThing.Util.DockerContainerNfo)(Expression(Of Func(Of SearchAThing.Util.DockerContainerNfo, System.Object)))
  name.vb: GetMemberName(Of DockerContainerNfo)(Expression(Of Func(Of DockerContainerNfo, Object)))
  spec.csharp:
  - uid: SearchAThing.UtilExt.GetMemberName``1(Expression{Func{``0,System.Object}})
    name: GetMemberName<DockerContainerNfo>
    nameWithType: UtilExt.GetMemberName<DockerContainerNfo>
    fullName: SearchAThing.UtilExt.GetMemberName<SearchAThing.Util.DockerContainerNfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.GetMemberName``1(Expression{Func{``0,System.Object}})
    name: GetMemberName(Of DockerContainerNfo)
    nameWithType: UtilExt.GetMemberName(Of DockerContainerNfo)
    fullName: SearchAThing.UtilExt.GetMemberName(Of SearchAThing.Util.DockerContainerNfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.Eval``2(Func{SearchAThing.Util.DockerContainerNfo,{U}})
  commentId: M:SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
  name: Eval<DockerContainerNfo, U>(Func<DockerContainerNfo, U>)
  nameWithType: UtilExt.Eval<DockerContainerNfo, U>(Func<DockerContainerNfo, U>)
  fullName: SearchAThing.UtilExt.Eval<SearchAThing.Util.DockerContainerNfo, U>(Func<SearchAThing.Util.DockerContainerNfo, U>)
  nameWithType.vb: UtilExt.Eval(Of DockerContainerNfo, U)(Func(Of DockerContainerNfo, U))
  fullName.vb: SearchAThing.UtilExt.Eval(Of SearchAThing.Util.DockerContainerNfo, U)(Func(Of SearchAThing.Util.DockerContainerNfo, U))
  name.vb: Eval(Of DockerContainerNfo, U)(Func(Of DockerContainerNfo, U))
  spec.csharp:
  - uid: SearchAThing.UtilExt.Eval``2(Func{``0,``1})
    name: Eval<DockerContainerNfo, U>
    nameWithType: UtilExt.Eval<DockerContainerNfo, U>
    fullName: SearchAThing.UtilExt.Eval<SearchAThing.Util.DockerContainerNfo, U>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.Eval``2(Func{``0,``1})
    name: Eval(Of DockerContainerNfo, U)
    nameWithType: UtilExt.Eval(Of DockerContainerNfo, U)
    fullName: SearchAThing.UtilExt.Eval(Of SearchAThing.Util.DockerContainerNfo, U)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.Assign``1(SearchAThing.Util.DockerContainerNfo,Func{PropertyInfo,System.Boolean})
  commentId: M:SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
  name: Assign<DockerContainerNfo>(DockerContainerNfo, Func<PropertyInfo, Boolean>)
  nameWithType: UtilExt.Assign<DockerContainerNfo>(DockerContainerNfo, Func<PropertyInfo, Boolean>)
  fullName: SearchAThing.UtilExt.Assign<SearchAThing.Util.DockerContainerNfo>(SearchAThing.Util.DockerContainerNfo, Func<PropertyInfo, System.Boolean>)
  nameWithType.vb: UtilExt.Assign(Of DockerContainerNfo)(DockerContainerNfo, Func(Of PropertyInfo, Boolean))
  fullName.vb: SearchAThing.UtilExt.Assign(Of SearchAThing.Util.DockerContainerNfo)(SearchAThing.Util.DockerContainerNfo, Func(Of PropertyInfo, System.Boolean))
  name.vb: Assign(Of DockerContainerNfo)(DockerContainerNfo, Func(Of PropertyInfo, Boolean))
  spec.csharp:
  - uid: SearchAThing.UtilExt.Assign``1(``0,Func{PropertyInfo,System.Boolean})
    name: Assign<DockerContainerNfo>
    nameWithType: UtilExt.Assign<DockerContainerNfo>
    fullName: SearchAThing.UtilExt.Assign<SearchAThing.Util.DockerContainerNfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.Assign``1(``0,Func{PropertyInfo,System.Boolean})
    name: Assign(Of DockerContainerNfo)
    nameWithType: UtilExt.Assign(Of DockerContainerNfo)
    fullName: SearchAThing.UtilExt.Assign(Of SearchAThing.Util.DockerContainerNfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.CopyFrom``1(SearchAThing.Util.DockerContainerNfo,Func{PropertyInfo,System.Boolean})
  commentId: M:SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
  name: CopyFrom<DockerContainerNfo>(DockerContainerNfo, Func<PropertyInfo, Boolean>)
  nameWithType: UtilExt.CopyFrom<DockerContainerNfo>(DockerContainerNfo, Func<PropertyInfo, Boolean>)
  fullName: SearchAThing.UtilExt.CopyFrom<SearchAThing.Util.DockerContainerNfo>(SearchAThing.Util.DockerContainerNfo, Func<PropertyInfo, System.Boolean>)
  nameWithType.vb: UtilExt.CopyFrom(Of DockerContainerNfo)(DockerContainerNfo, Func(Of PropertyInfo, Boolean))
  fullName.vb: SearchAThing.UtilExt.CopyFrom(Of SearchAThing.Util.DockerContainerNfo)(SearchAThing.Util.DockerContainerNfo, Func(Of PropertyInfo, System.Boolean))
  name.vb: CopyFrom(Of DockerContainerNfo)(DockerContainerNfo, Func(Of PropertyInfo, Boolean))
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFrom``1(``0,Func{PropertyInfo,System.Boolean})
    name: CopyFrom<DockerContainerNfo>
    nameWithType: UtilExt.CopyFrom<DockerContainerNfo>
    fullName: SearchAThing.UtilExt.CopyFrom<SearchAThing.Util.DockerContainerNfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFrom``1(``0,Func{PropertyInfo,System.Boolean})
    name: CopyFrom(Of DockerContainerNfo)
    nameWithType: UtilExt.CopyFrom(Of DockerContainerNfo)
    fullName: SearchAThing.UtilExt.CopyFrom(Of SearchAThing.Util.DockerContainerNfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.CopyFromCustom``1(SearchAThing.Util.DockerContainerNfo,SearchAThing.UtilExt.CopyFromCustomDelegate)
  commentId: M:SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
  name: CopyFromCustom<DockerContainerNfo>(DockerContainerNfo, UtilExt.CopyFromCustomDelegate)
  nameWithType: UtilExt.CopyFromCustom<DockerContainerNfo>(DockerContainerNfo, UtilExt.CopyFromCustomDelegate)
  fullName: SearchAThing.UtilExt.CopyFromCustom<SearchAThing.Util.DockerContainerNfo>(SearchAThing.Util.DockerContainerNfo, SearchAThing.UtilExt.CopyFromCustomDelegate)
  nameWithType.vb: UtilExt.CopyFromCustom(Of DockerContainerNfo)(DockerContainerNfo, UtilExt.CopyFromCustomDelegate)
  fullName.vb: SearchAThing.UtilExt.CopyFromCustom(Of SearchAThing.Util.DockerContainerNfo)(SearchAThing.Util.DockerContainerNfo, SearchAThing.UtilExt.CopyFromCustomDelegate)
  name.vb: CopyFromCustom(Of DockerContainerNfo)(DockerContainerNfo, UtilExt.CopyFromCustomDelegate)
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
    name: CopyFromCustom<DockerContainerNfo>
    nameWithType: UtilExt.CopyFromCustom<DockerContainerNfo>
    fullName: SearchAThing.UtilExt.CopyFromCustom<SearchAThing.Util.DockerContainerNfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.UtilExt.CopyFromCustomDelegate
    name: UtilExt.CopyFromCustomDelegate
    nameWithType: UtilExt.CopyFromCustomDelegate
    fullName: SearchAThing.UtilExt.CopyFromCustomDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
    name: CopyFromCustom(Of DockerContainerNfo)
    nameWithType: UtilExt.CopyFromCustom(Of DockerContainerNfo)
    fullName: SearchAThing.UtilExt.CopyFromCustom(Of SearchAThing.Util.DockerContainerNfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.UtilExt.CopyFromCustomDelegate
    name: UtilExt.CopyFromCustomDelegate
    nameWithType: UtilExt.CopyFromCustomDelegate
    fullName: SearchAThing.UtilExt.CopyFromCustomDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.CopyFromExclude``1(SearchAThing.Util.DockerContainerNfo,System.String[])
  commentId: M:SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
  name: CopyFromExclude<DockerContainerNfo>(DockerContainerNfo, String[])
  nameWithType: UtilExt.CopyFromExclude<DockerContainerNfo>(DockerContainerNfo, String[])
  fullName: SearchAThing.UtilExt.CopyFromExclude<SearchAThing.Util.DockerContainerNfo>(SearchAThing.Util.DockerContainerNfo, System.String[])
  nameWithType.vb: UtilExt.CopyFromExclude(Of DockerContainerNfo)(DockerContainerNfo, String())
  fullName.vb: SearchAThing.UtilExt.CopyFromExclude(Of SearchAThing.Util.DockerContainerNfo)(SearchAThing.Util.DockerContainerNfo, System.String())
  name.vb: CopyFromExclude(Of DockerContainerNfo)(DockerContainerNfo, String())
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,System.String[])
    name: CopyFromExclude<DockerContainerNfo>
    nameWithType: UtilExt.CopyFromExclude<DockerContainerNfo>
    fullName: SearchAThing.UtilExt.CopyFromExclude<SearchAThing.Util.DockerContainerNfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,System.String[])
    name: CopyFromExclude(Of DockerContainerNfo)
    nameWithType: UtilExt.CopyFromExclude(Of DockerContainerNfo)
    fullName: SearchAThing.UtilExt.CopyFromExclude(Of SearchAThing.Util.DockerContainerNfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.Util.DockerContainerNfo.SearchAThing.UtilExt.CopyFromInclude``1(SearchAThing.Util.DockerContainerNfo,System.String[])
  commentId: M:SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
  name: CopyFromInclude<DockerContainerNfo>(DockerContainerNfo, String[])
  nameWithType: UtilExt.CopyFromInclude<DockerContainerNfo>(DockerContainerNfo, String[])
  fullName: SearchAThing.UtilExt.CopyFromInclude<SearchAThing.Util.DockerContainerNfo>(SearchAThing.Util.DockerContainerNfo, System.String[])
  nameWithType.vb: UtilExt.CopyFromInclude(Of DockerContainerNfo)(DockerContainerNfo, String())
  fullName.vb: SearchAThing.UtilExt.CopyFromInclude(Of SearchAThing.Util.DockerContainerNfo)(SearchAThing.Util.DockerContainerNfo, System.String())
  name.vb: CopyFromInclude(Of DockerContainerNfo)(DockerContainerNfo, String())
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,System.String[])
    name: CopyFromInclude<DockerContainerNfo>
    nameWithType: UtilExt.CopyFromInclude<DockerContainerNfo>
    fullName: SearchAThing.UtilExt.CopyFromInclude<SearchAThing.Util.DockerContainerNfo>
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,System.String[])
    name: CopyFromInclude(Of DockerContainerNfo)
    nameWithType: UtilExt.CopyFromInclude(Of DockerContainerNfo)
    fullName: SearchAThing.UtilExt.CopyFromInclude(Of SearchAThing.Util.DockerContainerNfo)
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchAThing.Util.DockerContainerNfo
    name: DockerContainerNfo
    nameWithType: DockerContainerNfo
    fullName: SearchAThing.Util.DockerContainerNfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.SearchAThing.UtilExt.ToJson
  commentId: M:SearchAThing.UtilExt.ToJson(System.Object)
  parent: SearchAThing.UtilExt
  definition: SearchAThing.UtilExt.ToJson(System.Object)
  name: ToJson()
  nameWithType: UtilExt.ToJson()
  fullName: SearchAThing.UtilExt.ToJson()
  spec.csharp:
  - uid: SearchAThing.UtilExt.ToJson
    name: ToJson
    nameWithType: UtilExt.ToJson
    fullName: SearchAThing.UtilExt.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.ToJson
    name: ToJson
    nameWithType: UtilExt.ToJson
    fullName: SearchAThing.UtilExt.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.ToExpando(System.Object)
  commentId: M:SearchAThing.UtilExt.ToExpando(System.Object)
  isExternal: true
  name: ToExpando(Object)
  nameWithType: UtilExt.ToExpando(Object)
  fullName: SearchAThing.UtilExt.ToExpando(System.Object)
  spec.csharp:
  - uid: SearchAThing.UtilExt.ToExpando(System.Object)
    name: ToExpando
    nameWithType: UtilExt.ToExpando
    fullName: SearchAThing.UtilExt.ToExpando
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.ToExpando(System.Object)
    name: ToExpando
    nameWithType: UtilExt.ToExpando
    fullName: SearchAThing.UtilExt.ToExpando
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt
  commentId: T:SearchAThing.UtilExt
  parent: SearchAThing
  name: UtilExt
  nameWithType: UtilExt
  fullName: SearchAThing.UtilExt
- uid: SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
  commentId: M:SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
  isExternal: true
  name: GetMemberNames<T>(T, Expression<Func<T, Object>>)
  nameWithType: UtilExt.GetMemberNames<T>(T, Expression<Func<T, Object>>)
  fullName: SearchAThing.UtilExt.GetMemberNames<T>(T, Expression<Func<T, System.Object>>)
  nameWithType.vb: UtilExt.GetMemberNames(Of T)(T, Expression(Of Func(Of T, Object)))
  fullName.vb: SearchAThing.UtilExt.GetMemberNames(Of T)(T, Expression(Of Func(Of T, System.Object)))
  name.vb: GetMemberNames(Of T)(T, Expression(Of Func(Of T, Object)))
  spec.csharp:
  - uid: SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
    name: GetMemberNames<T>
    nameWithType: UtilExt.GetMemberNames<T>
    fullName: SearchAThing.UtilExt.GetMemberNames<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.GetMemberNames``1(``0,Expression{Func{``0,System.Object}})
    name: GetMemberNames(Of T)
    nameWithType: UtilExt.GetMemberNames(Of T)
    fullName: SearchAThing.UtilExt.GetMemberNames(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
  commentId: M:SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
  isExternal: true
  name: GetMemberName<T>(T, Expression<Func<T, Object>>)
  nameWithType: UtilExt.GetMemberName<T>(T, Expression<Func<T, Object>>)
  fullName: SearchAThing.UtilExt.GetMemberName<T>(T, Expression<Func<T, System.Object>>)
  nameWithType.vb: UtilExt.GetMemberName(Of T)(T, Expression(Of Func(Of T, Object)))
  fullName.vb: SearchAThing.UtilExt.GetMemberName(Of T)(T, Expression(Of Func(Of T, System.Object)))
  name.vb: GetMemberName(Of T)(T, Expression(Of Func(Of T, Object)))
  spec.csharp:
  - uid: SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
    name: GetMemberName<T>
    nameWithType: UtilExt.GetMemberName<T>
    fullName: SearchAThing.UtilExt.GetMemberName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.GetMemberName``1(``0,Expression{Func{``0,System.Object}})
    name: GetMemberName(Of T)
    nameWithType: UtilExt.GetMemberName(Of T)
    fullName: SearchAThing.UtilExt.GetMemberName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
  commentId: M:SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
  isExternal: true
  name: Eval<T, U>(T, Func<T, U>)
  nameWithType: UtilExt.Eval<T, U>(T, Func<T, U>)
  fullName: SearchAThing.UtilExt.Eval<T, U>(T, Func<T, U>)
  nameWithType.vb: UtilExt.Eval(Of T, U)(T, Func(Of T, U))
  fullName.vb: SearchAThing.UtilExt.Eval(Of T, U)(T, Func(Of T, U))
  name.vb: Eval(Of T, U)(T, Func(Of T, U))
  spec.csharp:
  - uid: SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
    name: Eval<T, U>
    nameWithType: UtilExt.Eval<T, U>
    fullName: SearchAThing.UtilExt.Eval<T, U>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.Eval``2(``0,Func{``0,``1})
    name: Eval(Of T, U)
    nameWithType: UtilExt.Eval(Of T, U)
    fullName: SearchAThing.UtilExt.Eval(Of T, U)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
  commentId: M:SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
  isExternal: true
  name: Assign<T>(T, T, Func<PropertyInfo, Boolean>)
  nameWithType: UtilExt.Assign<T>(T, T, Func<PropertyInfo, Boolean>)
  fullName: SearchAThing.UtilExt.Assign<T>(T, T, Func<PropertyInfo, System.Boolean>)
  nameWithType.vb: UtilExt.Assign(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  fullName.vb: SearchAThing.UtilExt.Assign(Of T)(T, T, Func(Of PropertyInfo, System.Boolean))
  name.vb: Assign(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  spec.csharp:
  - uid: SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
    name: Assign<T>
    nameWithType: UtilExt.Assign<T>
    fullName: SearchAThing.UtilExt.Assign<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.Assign``1(``0,``0,Func{PropertyInfo,System.Boolean})
    name: Assign(Of T)
    nameWithType: UtilExt.Assign(Of T)
    fullName: SearchAThing.UtilExt.Assign(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
  commentId: M:SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
  isExternal: true
  name: CopyFrom<T>(T, T, Func<PropertyInfo, Boolean>)
  nameWithType: UtilExt.CopyFrom<T>(T, T, Func<PropertyInfo, Boolean>)
  fullName: SearchAThing.UtilExt.CopyFrom<T>(T, T, Func<PropertyInfo, System.Boolean>)
  nameWithType.vb: UtilExt.CopyFrom(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  fullName.vb: SearchAThing.UtilExt.CopyFrom(Of T)(T, T, Func(Of PropertyInfo, System.Boolean))
  name.vb: CopyFrom(Of T)(T, T, Func(Of PropertyInfo, Boolean))
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
    name: CopyFrom<T>
    nameWithType: UtilExt.CopyFrom<T>
    fullName: SearchAThing.UtilExt.CopyFrom<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFrom``1(``0,``0,Func{PropertyInfo,System.Boolean})
    name: CopyFrom(Of T)
    nameWithType: UtilExt.CopyFrom(Of T)
    fullName: SearchAThing.UtilExt.CopyFrom(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
  commentId: M:SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
  name: CopyFromCustom<T>(T, T, UtilExt.CopyFromCustomDelegate)
  nameWithType: UtilExt.CopyFromCustom<T>(T, T, UtilExt.CopyFromCustomDelegate)
  fullName: SearchAThing.UtilExt.CopyFromCustom<T>(T, T, SearchAThing.UtilExt.CopyFromCustomDelegate)
  nameWithType.vb: UtilExt.CopyFromCustom(Of T)(T, T, UtilExt.CopyFromCustomDelegate)
  fullName.vb: SearchAThing.UtilExt.CopyFromCustom(Of T)(T, T, SearchAThing.UtilExt.CopyFromCustomDelegate)
  name.vb: CopyFromCustom(Of T)(T, T, UtilExt.CopyFromCustomDelegate)
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
    name: CopyFromCustom<T>
    nameWithType: UtilExt.CopyFromCustom<T>
    fullName: SearchAThing.UtilExt.CopyFromCustom<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.UtilExt.CopyFromCustomDelegate
    name: UtilExt.CopyFromCustomDelegate
    nameWithType: UtilExt.CopyFromCustomDelegate
    fullName: SearchAThing.UtilExt.CopyFromCustomDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromCustom``1(``0,``0,SearchAThing.UtilExt.CopyFromCustomDelegate)
    name: CopyFromCustom(Of T)
    nameWithType: UtilExt.CopyFromCustom(Of T)
    fullName: SearchAThing.UtilExt.CopyFromCustom(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.UtilExt.CopyFromCustomDelegate
    name: UtilExt.CopyFromCustomDelegate
    nameWithType: UtilExt.CopyFromCustomDelegate
    fullName: SearchAThing.UtilExt.CopyFromCustomDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
  commentId: M:SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
  isExternal: true
  name: CopyFromExclude<T>(T, T, String[])
  nameWithType: UtilExt.CopyFromExclude<T>(T, T, String[])
  fullName: SearchAThing.UtilExt.CopyFromExclude<T>(T, T, System.String[])
  nameWithType.vb: UtilExt.CopyFromExclude(Of T)(T, T, String())
  fullName.vb: SearchAThing.UtilExt.CopyFromExclude(Of T)(T, T, System.String())
  name.vb: CopyFromExclude(Of T)(T, T, String())
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
    name: CopyFromExclude<T>
    nameWithType: UtilExt.CopyFromExclude<T>
    fullName: SearchAThing.UtilExt.CopyFromExclude<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromExclude``1(``0,``0,System.String[])
    name: CopyFromExclude(Of T)
    nameWithType: UtilExt.CopyFromExclude(Of T)
    fullName: SearchAThing.UtilExt.CopyFromExclude(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
  commentId: M:SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
  isExternal: true
  name: CopyFromInclude<T>(T, T, String[])
  nameWithType: UtilExt.CopyFromInclude<T>(T, T, String[])
  fullName: SearchAThing.UtilExt.CopyFromInclude<T>(T, T, System.String[])
  nameWithType.vb: UtilExt.CopyFromInclude(Of T)(T, T, String())
  fullName.vb: SearchAThing.UtilExt.CopyFromInclude(Of T)(T, T, System.String())
  name.vb: CopyFromInclude(Of T)(T, T, String())
  spec.csharp:
  - uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
    name: CopyFromInclude<T>
    nameWithType: UtilExt.CopyFromInclude<T>
    fullName: SearchAThing.UtilExt.CopyFromInclude<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.CopyFromInclude``1(``0,``0,System.String[])
    name: CopyFromInclude(Of T)
    nameWithType: UtilExt.CopyFromInclude(Of T)
    fullName: SearchAThing.UtilExt.CopyFromInclude(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing.UtilExt.ToJson(System.Object)
  commentId: M:SearchAThing.UtilExt.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: UtilExt.ToJson(Object)
  fullName: SearchAThing.UtilExt.ToJson(System.Object)
  spec.csharp:
  - uid: SearchAThing.UtilExt.ToJson(System.Object)
    name: ToJson
    nameWithType: UtilExt.ToJson
    fullName: SearchAThing.UtilExt.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SearchAThing.UtilExt.ToJson(System.Object)
    name: ToJson
    nameWithType: UtilExt.ToJson
    fullName: SearchAThing.UtilExt.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SearchAThing
  commentId: N:SearchAThing
  name: SearchAThing
  nameWithType: SearchAThing
  fullName: SearchAThing
- uid: SearchAThing.Util.DockerContainerNfo.Name*
  commentId: Overload:SearchAThing.Util.DockerContainerNfo.Name
  name: Name
  nameWithType: DockerContainerNfo.Name
  fullName: SearchAThing.Util.DockerContainerNfo.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SearchAThing.Util.DockerContainerNfo.IPAddress*
  commentId: Overload:SearchAThing.Util.DockerContainerNfo.IPAddress
  name: IPAddress
  nameWithType: DockerContainerNfo.IPAddress
  fullName: SearchAThing.Util.DockerContainerNfo.IPAddress
- uid: SearchAThing.Util.DockerContainerNfo.#ctor*
  commentId: Overload:SearchAThing.Util.DockerContainerNfo.#ctor
  name: DockerContainerNfo
  nameWithType: DockerContainerNfo.DockerContainerNfo
  fullName: SearchAThing.Util.DockerContainerNfo.DockerContainerNfo
- uid: SearchAThing.Util.DockerContainerNfo.ToString*
  commentId: Overload:SearchAThing.Util.DockerContainerNfo.ToString
  name: ToString
  nameWithType: DockerContainerNfo.ToString
  fullName: SearchAThing.Util.DockerContainerNfo.ToString
