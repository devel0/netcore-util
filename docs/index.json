{
  "README.html": {
    "href": "README.html",
    "title": "netcore-util | netcore-util",
    "keywords": "netcore-util .NET core utilities API Documentation Changelog Quickstart Unit tests Examples exec-bash-redirect How this project was built Quickstart dotnet new console --use-program-main -n test cd test dotnet add package netcore-util dotnet run copy usings.util.cs global usings to the source folder extension methods using SearchAThing.Util; toolkit methods using static SearchAThing.Util.Toolkit; Unit tests dotnet test to debug from vscode just run debug test from code lens balloon Examples exec-bash-redirect namespace SearchAThing.Util.Examples; class Program { static void Main(string[] args) { Task.Run(async () => { var q = await ExecBashRedirect(\"i=0; while (($i < 5)); do echo $i; let i=$i+1; done\", CancellationToken.None, sudo: false, verbose: false); if (q.ExitCode == 0) { System.Console.WriteLine($\"output[{q.Output}]\"); } // RESULT: // // output[0 // 1 // 2 // 3 // 4 // ] }).Wait(); } } How this project was built mkdir netcore-util cd netcore-util dotnet new sln mkdir -p examples src/util cd src/util dotnet new classlib -n netcore-util # add packages ( https://nuget.org ) cd .. dotnet new xunit -n test cd test dotnet add reference ../util/netcore-util.csproj cd .. dotnet sln add src/util src/test examples/example01 dotnet build dotnet test"
  },
  "api/SearchAThing.Util.DockerContainerNfo.html": {
    "href": "api/SearchAThing.Util.DockerContainerNfo.html",
    "title": "Class DockerContainerNfo | netcore-util",
    "keywords": "Class DockerContainerNfo Namespace SearchAThing.Util Assembly netcore-util.dll docker container info used by ListContainer public class DockerContainerNfo Inheritance object DockerContainerNfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DockerContainerNfo(string, string) construct container info obj public DockerContainerNfo(string name, string ipaddress) Parameters name string ipaddress string Properties IPAddress container ip address public string IPAddress { get; } Property Value string Name container name public string Name { get; } Property Value string Methods ToString() stringify container obj public override string ToString() Returns string"
  },
  "api/SearchAThing.Util.DockerNetworkNfo.html": {
    "href": "api/SearchAThing.Util.DockerNetworkNfo.html",
    "title": "Class DockerNetworkNfo | netcore-util",
    "keywords": "Class DockerNetworkNfo Namespace SearchAThing.Util Assembly netcore-util.dll docker network information public class DockerNetworkNfo Inheritance object DockerNetworkNfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DockerNetworkNfo(string, string) create docker network info object public DockerNetworkNfo(string networkName, string subnet) Parameters networkName string subnet string Properties Name name of network public string Name { get; } Property Value string Subnet subnet belonging to this docker network public string Subnet { get; } Property Value string Methods ToString() stringify docker network obj public override string ToString() Returns string"
  },
  "api/SearchAThing.Util.ErrorInfo.html": {
    "href": "api/SearchAThing.Util.ErrorInfo.html",
    "title": "Class ErrorInfo | netcore-util",
    "keywords": "Class ErrorInfo Namespace SearchAThing.Util Assembly netcore-util.dll public class ErrorInfo Inheritance object ErrorInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties ExceptionType public string ExceptionType { get; set; } Property Value string InnerException public string InnerException { get; set; } Property Value string Message public string Message { get; set; } Property Value string Stacktrace public string Stacktrace { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. ToString(bool) public string ToString(bool includeStackTrace) Parameters includeStackTrace bool Returns string"
  },
  "api/SearchAThing.Util.Ext.html": {
    "href": "api/SearchAThing.Util.Ext.html",
    "title": "Class Ext | netcore-util",
    "keywords": "Class Ext Namespace SearchAThing.Util Assembly netcore-util.dll public static class Ext Inheritance object Ext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CompareTol(IQuantity, IQuantity, IQuantity) public static int CompareTol(this IQuantity x, IQuantity tol, IQuantity y) Parameters x IQuantity tol IQuantity y IQuantity Returns int Details(Exception, bool) public static string Details(this Exception ex, bool includeStackTrace = true) Parameters ex Exception includeStackTrace bool Returns string DetailsObject(Exception) public static ErrorInfo DetailsObject(this Exception _ex) Parameters _ex Exception Returns ErrorInfo EqualsTol(IQuantity, IQuantity, IQuantity) true if ( |x-y| LTE tol ) public static bool EqualsTol(this IQuantity x, IQuantity tol, IQuantity y) Parameters x IQuantity tol IQuantity y IQuantity Returns bool GreatThanOrEqualsTol(IQuantity, IQuantity, IQuantity) true if (x GT y) AND ( |x-y| LTE tol ) public static bool GreatThanOrEqualsTol(this IQuantity x, IQuantity tol, IQuantity y) Parameters x IQuantity tol IQuantity y IQuantity Returns bool GreatThanTol(IQuantity, IQuantity, IQuantity) true if (x GT y) AND NOT ( |x-y| LTE tol ) public static bool GreatThanTol(this IQuantity x, IQuantity tol, IQuantity y) Parameters x IQuantity tol IQuantity y IQuantity Returns bool LessThanOrEqualsTol(IQuantity, IQuantity, IQuantity) true if (x LT y) AND ( |x-y| LTE tol ) public static bool LessThanOrEqualsTol(this IQuantity x, IQuantity tol, IQuantity y) Parameters x IQuantity tol IQuantity y IQuantity Returns bool LessThanTol(IQuantity, IQuantity, IQuantity) true if (x LT y) AND NOT ( |x-y| LTE tol ) public static bool LessThanTol(this IQuantity x, IQuantity tol, IQuantity y) Parameters x IQuantity tol IQuantity y IQuantity Returns bool"
  },
  "api/SearchAThing.Util.Toolkit.html": {
    "href": "api/SearchAThing.Util.Toolkit.html",
    "title": "Class Toolkit | netcore-util",
    "keywords": "Class Toolkit Namespace SearchAThing.Util Assembly netcore-util.dll public static class Toolkit Inheritance object Toolkit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildImage(string, string, CancellationToken, bool, bool, string[]?) build docker image public static Task BuildImage(string dockerImageName, string dockerSourceDir, CancellationToken ct, bool sudo = false, bool verbose = false, string[]? extra_args = null) Parameters dockerImageName string dockerSourceDir string ct CancellationToken sudo bool verbose bool extra_args string[] Returns Task CreateNetwork(string, string, CancellationToken, bool, bool) create docker network public static Task CreateNetwork(string networkName, string subnet, CancellationToken ct, bool sudo = false, bool verbose = false) Parameters networkName string subnet string ct CancellationToken sudo bool verbose bool Returns Task DynamicMakeDictionary(dynamic) convert given dynamic object into a dictionary string,object for its properties public static IDictionary<string, object>? DynamicMakeDictionary(dynamic obj) Parameters obj dynamic Returns IDictionary<string, object> ExecBashRedirect(string, CancellationToken, bool, bool) start a bash process in background redirecting standard output, error; given script can contains pipe and other shell related redirections. a cancellation token can be supplied to cancel underlying process public static Task<ExecResult> ExecBashRedirect(string script, CancellationToken ct, bool sudo = false, bool verbose = false) Parameters script string bash script to execute ct CancellationToken cancellation token sudo bool true if sudo required verbose bool if true prints command and args used Returns Task<ExecResult> ExecContainerCmd(string, string, CancellationToken, bool, bool) executes given bash command into container public static Task<int> ExecContainerCmd(string containerName, string command, CancellationToken ct, bool sudo = false, bool verbose = false) Parameters containerName string command string ct CancellationToken sudo bool verbose bool Returns Task<int> GetImageNfo(string) retrieve image nfo public static MagickImageInfo GetImageNfo(string pathfilename) Parameters pathfilename string Returns MagickImageInfo GetImageNfoFromStream(Stream) retrieve image nfo public static MagickImageInfo GetImageNfoFromStream(Stream stream) Parameters stream Stream Returns MagickImageInfo GetJsonArray(string) return dynamic array from given [[xx],[yy],...] json array public static dynamic GetJsonArray(this string jsonDumps) Parameters jsonDumps string Returns dynamic ImageSizeMM(MagickImageInfo, double) retrieve image size width (mm) x height (mm); if no density info present in image defaultDpi argument will used public static (double widthMM, double heightMM) ImageSizeMM(this MagickImageInfo nfo, double defaultDpi = 96) Parameters nfo MagickImageInfo input magick image nfo defaultDpi double used if image density info missing Returns (double widthMM, double heightMM) IsFilePermissionSafe(string, int) check if given file has required mode ( default = 700 ) to specify mode from octal eg. Convert.ToInt32(\"700\", 8) public static bool IsFilePermissionSafe(string pathfilename, int mode = 448) Parameters pathfilename string mode int Returns bool ListContainers(CancellationToken, bool, bool) retrieve list of containers public static Task<IReadOnlyList<DockerContainerNfo>> ListContainers(CancellationToken ct, bool sudo = false, bool verbose = false) Parameters ct CancellationToken sudo bool verbose bool Returns Task<IReadOnlyList<DockerContainerNfo>> ListNetworks(CancellationToken, bool, bool) retrieve list of docker networks public static Task<IReadOnlyList<DockerNetworkNfo>> ListNetworks(CancellationToken ct, bool sudo = false, bool verbose = false) Parameters ct CancellationToken sudo bool verbose bool Returns Task<IReadOnlyList<DockerNetworkNfo>> MakeDynamic(params (string name, object value)[]) create a dynamic object containing given set of properties public static dynamic MakeDynamic(params (string name, object value)[] items) Parameters items (string name, object value)[] Returns dynamic RemoveContainer(string, CancellationToken, bool, bool) remove (stopped) container public static Task RemoveContainer(string containerName, CancellationToken ct, bool sudo = false, bool verbose = false) Parameters containerName string ct CancellationToken sudo bool verbose bool Returns Task RemoveNetwork(string, CancellationToken, bool, bool) remove docker network public static Task RemoveNetwork(string networkName, CancellationToken ct, bool sudo = false, bool verbose = false) Parameters networkName string ct CancellationToken sudo bool verbose bool Returns Task RunContainer(string, string, string, string, string, string, CancellationToken, bool, bool) create new container from given image public static Task RunContainer(string containerName, string containerNetwork, string containerIp, string containerImage, string cpus, string memory, CancellationToken ct, bool sudo = false, bool verbose = false) Parameters containerName string containerNetwork string containerIp string containerImage string cpus string memory string ct CancellationToken sudo bool verbose bool Returns Task SetFilePermission(string, int) set file permission of given pathfilename ( eg. Convert.ToInt32(\"700\", 8) ) public static int SetFilePermission(string pathfilename, int mode) Parameters pathfilename string mode int Returns int StopContainer(string, CancellationToken, bool, bool) stop container public static Task StopContainer(string containerName, CancellationToken ct, bool sudo = false, bool verbose = false) Parameters containerName string ct CancellationToken sudo bool verbose bool Returns Task ToExpando(object) create an expando object by copying given src public static ExpandoObject? ToExpando(object src) Parameters src object Returns ExpandoObject ToJson(object) public static string ToJson(object o) Parameters o object Returns string"
  },
  "api/SearchAThing.Util.html": {
    "href": "api/SearchAThing.Util.html",
    "title": "Namespace SearchAThing.Util | netcore-util",
    "keywords": "Namespace SearchAThing.Util Classes DockerContainerNfo docker container info used by ListContainer DockerNetworkNfo docker network information ErrorInfo Ext Toolkit"
  },
  "index.html": {
    "href": "index.html",
    "title": "netcore-util | netcore-util",
    "keywords": "netcore-util api sources"
  }
}